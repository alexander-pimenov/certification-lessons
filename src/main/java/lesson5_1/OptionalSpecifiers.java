package lesson5_1;

public class OptionalSpecifiers {

    //Опциональные спецификаторы:

    //static - статические методы используют часто для утилитарных целей
    /* Статические методы и статические сущности не пренадлежат объекту, они принадлежат классу.
     * Т.е. у Java есть возможность вызывать методы и использовать поля не создавая объект какого то класса.
     * Метод из этого класса для всех вызвавших его будет одинаково отрабатывать.
     * Статические методы хорошо работают и без объектов класса, но их так же можно вызывать из созданных
     * объектов.*/

    //abstract - абстрактный, что то не доделаное, болванка.
    /* Абстрактные методы в абстрактных классах для того чтобы потом другие
     * разработчики обязательно дописали эти методы как им нужно.
     * У абстрактного класса есть абстрактные методы.
     * Внутри обычных классов абстрактные методы создавать нельзя !!!
     */

    //final - при наследовании мы методы с этим модификатором переопределить не можем !!!
    /* Т.е. в потомке изменить final метод от предка мы не можем. */

    //synchronized - для синхронизации в многопоточности.

    //native - означает, что код написан не на Java.

    //strictfp - используется для вычислений с плавающей запятой.
    /* Для того, чтобы JVM и JIC (Just In-Time Compiler) обрабатывала в помеченных методах расчеты с плавающей точкой без
    * каких либо оптимизаций, а не по своему усмотрению. */

    public void walk1(){};
    public final void walk2(){};
    final public void walk3(){}; // - и так можно записать
    public static final void walk4(){};
//    public final static void walk4(){}; - можно и так записать


}
